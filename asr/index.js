/**
 * ASR documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.dev
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ASRResultDto', 'model/AudioFileDto', 'model/ExceptionDto', 'model/PackageDto', 'model/RecognitionRequestDto', 'model/SessionDto', 'model/SessionlessRecognitionRequestDto', 'model/StartSessionRequest', 'model/StatusDto', 'model/StreamRequestDto', 'model/WebSocketServerConfiguration', 'model/WordDto', 'api/PackagesApi', 'api/RecognizeApi', 'api/SessionApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/ASRResultDto'), require('./model/AudioFileDto'), require('./model/ExceptionDto'), require('./model/PackageDto'), require('./model/RecognitionRequestDto'), require('./model/SessionDto'), require('./model/SessionlessRecognitionRequestDto'), require('./model/StartSessionRequest'), require('./model/StatusDto'), require('./model/StreamRequestDto'), require('./model/WebSocketServerConfiguration'), require('./model/WordDto'), require('./api/PackagesApi'), require('./api/RecognizeApi'), require('./api/SessionApi'));
  }
}(function(ApiClient, ASRResultDto, AudioFileDto, ExceptionDto, PackageDto, RecognitionRequestDto, SessionDto, SessionlessRecognitionRequestDto, StartSessionRequest, StatusDto, StreamRequestDto, WebSocketServerConfiguration, WordDto, PackagesApi, RecognizeApi, SessionApi) {
  'use strict';

  /**
   * ERROR_UNKNOWN.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var AsrDocumentation = require('index'); // See note below*.
   * var xxxSvc = new AsrDocumentation.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new AsrDocumentation.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new AsrDocumentation.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new AsrDocumentation.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.dev
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The ASRResultDto model constructor.
     * @property {module:model/ASRResultDto}
     */
    ASRResultDto: ASRResultDto,
    /**
     * The AudioFileDto model constructor.
     * @property {module:model/AudioFileDto}
     */
    AudioFileDto: AudioFileDto,
    /**
     * The ExceptionDto model constructor.
     * @property {module:model/ExceptionDto}
     */
    ExceptionDto: ExceptionDto,
    /**
     * The PackageDto model constructor.
     * @property {module:model/PackageDto}
     */
    PackageDto: PackageDto,
    /**
     * The RecognitionRequestDto model constructor.
     * @property {module:model/RecognitionRequestDto}
     */
    RecognitionRequestDto: RecognitionRequestDto,
    /**
     * The SessionDto model constructor.
     * @property {module:model/SessionDto}
     */
    SessionDto: SessionDto,
    /**
     * The SessionlessRecognitionRequestDto model constructor.
     * @property {module:model/SessionlessRecognitionRequestDto}
     */
    SessionlessRecognitionRequestDto: SessionlessRecognitionRequestDto,
    /**
     * The StartSessionRequest model constructor.
     * @property {module:model/StartSessionRequest}
     */
    StartSessionRequest: StartSessionRequest,
    /**
     * The StatusDto model constructor.
     * @property {module:model/StatusDto}
     */
    StatusDto: StatusDto,
    /**
     * The StreamRequestDto model constructor.
     * @property {module:model/StreamRequestDto}
     */
    StreamRequestDto: StreamRequestDto,
    /**
     * The WebSocketServerConfiguration model constructor.
     * @property {module:model/WebSocketServerConfiguration}
     */
    WebSocketServerConfiguration: WebSocketServerConfiguration,
    /**
     * The WordDto model constructor.
     * @property {module:model/WordDto}
     */
    WordDto: WordDto,
    /**
     * The PackagesApi service constructor.
     * @property {module:api/PackagesApi}
     */
    PackagesApi: PackagesApi,
    /**
     * The RecognizeApi service constructor.
     * @property {module:api/RecognizeApi}
     */
    RecognizeApi: RecognizeApi,
    /**
     * The SessionApi service constructor.
     * @property {module:api/SessionApi}
     */
    SessionApi: SessionApi
  };

  return exports;
}));
