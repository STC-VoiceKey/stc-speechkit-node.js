/**
 * Diarization documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['/ApiClient', 'model/AudioDto', 'model/AuthRequestDto', 'model/AuthResponseDto', 'model/AuthStatusDto',
      'model/DiarizationResponseDto', 'model/DomainDto', 'model/MessageDto', 'model/ModuleNamesDto', 'model/SegmentDto',
      'model/SpeakerDto', 'api/DiarizationApi', 'api/SessionApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AudioDto'), require('./model/AuthRequestDto'),
        require('./model/AuthResponseDto'), require('./model/AuthStatusDto'), require('./model/DiarizationResponseDto'),
        require('./model/DomainDto'), require('./model/MessageDto'), require('./model/ModuleNamesDto'),
        require('./model/SegmentDto'), require('./model/SpeakerDto'), require('./api/DiarizationApi'), require('./api/SessionApi'));
  }
}(function(ApiClient, AudioDto, AuthRequestDto, AuthResponseDto, AuthStatusDto, DiarizationResponseDto, DomainDto, MessageDto,
           ModuleNamesDto, SegmentDto, SpeakerDto, DiarizationApi, SessionApi) {
  'use strict';

  /**
   * ERROR_UNKNOWN.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var DiarizationDocumentation = require('index'); // See note below*.
   * var xxxSvc = new DiarizationDocumentation.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new DiarizationDocumentation.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new DiarizationDocumentation.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new DiarizationDocumentation.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.1.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AudioDto model constructor.
     * @property {module:model/AudioDto}
     */
    AudioDto: AudioDto,
    /**
     * The AuthRequestDto model constructor.
     * @property {module:model/AuthRequestDto}
     */
    AuthRequestDto: AuthRequestDto,
    /**
     * The AuthResponseDto model constructor.
     * @property {module:model/AuthResponseDto}
     */
    AuthResponseDto: AuthResponseDto,
    /**
     * The AuthStatusDto model constructor.
     * @property {module:model/AuthStatusDto}
     */
    AuthStatusDto: AuthStatusDto,
    /**
     * The DiarizationResponseDto model constructor.
     * @property {module:model/DiarizationResponseDto}
     */
    DiarizationResponseDto: DiarizationResponseDto,
    /**
     * The DomainDto model constructor.
     * @property {module:model/DomainDto}
     */
    DomainDto: DomainDto,
    /**
     * The MessageDto model constructor.
     * @property {module:model/MessageDto}
     */
    MessageDto: MessageDto,
    /**
     * The ModuleNamesDto model constructor.
     * @property {module:model/ModuleNamesDto}
     */
    ModuleNamesDto: ModuleNamesDto,
    /**
     * The SegmentDto model constructor.
     * @property {module:model/SegmentDto}
     */
    SegmentDto: SegmentDto,
    /**
     * The SpeakerDto model constructor.
     * @property {module:model/SpeakerDto}
     */
    SpeakerDto: SpeakerDto,
    /**
     * The DiarizationApi service constructor.
     * @property {module:api/DiarizationApi}
     */
    DiarizationApi: DiarizationApi,
    /**
     * The SessionApi service constructor.
     * @property {module:api/SessionApi}
     */
    SessionApi: SessionApi
  };

  return exports;
}));
