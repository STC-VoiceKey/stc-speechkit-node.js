/**
 * Diarization documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.1.73
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DiarizationParam', 'model/DiarizationResponse', 'model/ExceptionModel'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/DiarizationParam'), require('../model/DiarizationResponse'), require('../model/ExceptionModel'));
  } else {
    // Browser globals (root is window)
    if (!root.DiarizationDocumentation) {
      root.DiarizationDocumentation = {};
    }
    root.DiarizationDocumentation.V1Api = factory(root.DiarizationDocumentation.ApiClient, root.DiarizationDocumentation.DiarizationParam, root.DiarizationDocumentation.DiarizationResponse, root.DiarizationDocumentation.ExceptionModel);
  }
}(this, function(ApiClient, DiarizationParam, DiarizationResponse, ExceptionModel) {
  'use strict';

  /**
   * V1 service.
   * @module api/V1Api
   * @version 3.1.73
   */

  /**
   * Constructs a new V1Api. 
   * @alias module:api/V1Api
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the diarization operation.
     * @callback module:api/V1Api~diarizationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DiarizationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Diarization speech from sample
     * 
     * @param {String} xSessionId Session identifier
     * @param {module:model/DiarizationParam} body Diarization param
     * @param {module:api/V1Api~diarizationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DiarizationResponse}
     */
    this.diarization = function(xSessionId, body, callback) {
      var postBody = body;

      // verify the required parameter 'xSessionId' is set
      if (xSessionId === undefined || xSessionId === null) {
        throw new Error("Missing the required parameter 'xSessionId' when calling diarization");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling diarization");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'X-Session-Id': xSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = DiarizationResponse;

      return this.apiClient.callApi(
        '/v1/diarization', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
